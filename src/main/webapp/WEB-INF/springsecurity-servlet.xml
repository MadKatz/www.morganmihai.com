<beans:beans xmlns="http://www.springframework.org/schema/security"
    xmlns:beans="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
    http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.0.xsd
    http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.0.xsd
    http://www.springframework.org/schema/context
    http://www.springframework.org/schema/context/spring-context-3.0.xsd
    http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.0.xsd
    http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd">
     
    <http auto-config="true">
        <intercept-url pattern="/" access="permitAll" />
        <intercept-url pattern="/home" access="permitAll" />
        <intercept-url pattern="/projects" access="permitAll" />
        <intercept-url pattern="/resume" access="permitAll" />
        <intercept-url pattern="/resources/**" access="permitAll" />
        <intercept-url pattern="/userhome**" access="hasRole('USER')" />
        <intercept-url pattern="/userprofile**" access="hasRole('USER')" />
        <form-login login-page="/signin" authentication-failure-url="/signin?error" username-parameter="username" password-parameter="password" default-target-url="/userhome" />
        <csrf/>
    </http>

    <authentication-manager >
        <authentication-provider>
          <jdbc-user-service data-source-ref="dataSource"
                             users-by-username-query="select username, password, enabled from users where username=?"
                             authorities-by-username-query="select b.username, a.role from user_roles a, users b where b.username=? and a.userid=b.userid" /> 
          <password-encoder ref="encoder" />
        </authentication-provider>
    </authentication-manager>
    
    
    
    <!-- Hibernate 4 SessionFactory Bean definition -->
    <beans:bean id="hibernate4AnnotatedSessionFactory"
            class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
            <beans:property name="dataSource" ref="dataSource" />
            <beans:property name="annotatedClasses">
                    <beans:list>
                            <beans:value>com.mm.website.model.User</beans:value>
                            <beans:value>com.mm.website.model.UserRole</beans:value>
                    </beans:list>
            </beans:property>
            <beans:property name="hibernateProperties">
                    <beans:props>
                            <beans:prop key="hibernate.dialect">org.hibernate.dialect.MySQLDialect
                            </beans:prop>
                            <beans:prop key="hibernate.show_sql">true</beans:prop>
                    </beans:props>
            </beans:property>
    </beans:bean>
     
</beans:beans>