<beans:beans xmlns="http://www.springframework.org/schema/security"
    xmlns:beans="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.1.xsd
    http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-4.0.xsd">
     
    <http auto-config="true" use-expressions="true" access-decision-manager-ref="accessDecisionManager">
        <intercept-url pattern="/" access="permitAll"  />
        <intercept-url pattern="/home" access="permitAll" />
        <intercept-url pattern="/projects" access="permitAll" />
        <intercept-url pattern="/resume" access="permitAll" />
        <intercept-url pattern="/resources/**" access="permitAll" />
        <intercept-url pattern="/userhome**" access="hasRole('ROLE_USER')" />
        <intercept-url pattern="/userprofile**" access="hasRole('ROLE_USER')" />
        <intercept-url pattern="/admin**" access="hasRole('ROLE_ADMIN')" />
        <intercept-url pattern="/admin/**" access="hasRole('ROLE_ADMIN')" />
        <form-login login-page="/signin" authentication-failure-url="/signin?error" username-parameter="username" password-parameter="password" default-target-url="/userhome" />
        <csrf/>
    </http>
    
    <authentication-manager >
        <authentication-provider>
          <jdbc-user-service data-source-ref="dataSource"
                             users-by-username-query="select username, password, enabled from users where username=?"
                             authorities-by-username-query="select b.username, a.role from user_roles a, users b where b.username=? and a.userid=b.userid" /> 
          <password-encoder ref="encoder" />
        </authentication-provider>
    </authentication-manager>
     
</beans:beans>